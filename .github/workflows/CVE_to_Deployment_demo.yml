name: CVE to Deployment
on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      dryrun:
        description: 'running mode'
        required: true
        default: true
        type: boolean
      build_image:
        description: 'build image or not'
        required: true
        default: false
        type: boolean

jobs:
  test-cvetodeployment:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - PATH: '/build/cloud/07-deployment.yaml'
          - PATH: '/build/admission/deployment.yaml'
          - PATH: '/build/edgesite/edgesite-agent.yaml'
          - PATH: '/build/edgesite/edgesite-server.yaml'
          - PATH: '/build/iptablesmanager/iptablesmanager-ds.yaml'
          - PATH: '/build/controllermanager/controllermanager-deploy.yaml'
          - PATH: '/build/conformance/kubernetes/job-conformance.yaml'
    steps:
      - name: Pull latest image
        if: ${{ inputs.build_image == true }}
        uses: actions/download-artifact@v4
        with:
          name: build-result-docker-artifact
          path: /home/runner/build-result
      - name: load image
        if: ${{ inputs.build_image == true }}
        run: |
          docker load < /home/runner/build-result/build-result.tar
      - name: Checkout Target repo
        id: checkout_target
        uses: actions/checkout@v4
        with:
          repository: SamYuan1990/kubeedge
      - name: use this action to generate suggestion for deployment settings
        id: Lint_with_LLM
        uses: SamYuan1990/OpenAI_CodeAgent-action@main
        with:
          baseURL: https://api.deepseek.com
          apiKey: dummy
          model: deepseek-chat
          dirpath: '/workdir'
          deploymentfile: /workdir/${{ matrix.PATH }}
          runType: CVE2Deployment
          dryRun: ${{ inputs.dryrun }}
      - name: output check
        shell: bash
        run: |
          echo '${{ steps.Lint_with_LLM.outputs.avg_prompt_precent }}'
          echo '${{ steps.Lint_with_LLM.outputs.avg_content_precent }}'
          echo '${{ steps.Lint_with_LLM.outputs.avg_time_usage }}'
          echo '${{ steps.Lint_with_LLM.outputs.avg_inputToken }}'
          echo '${{ steps.Lint_with_LLM.outputs.avg_outputToken }}'
